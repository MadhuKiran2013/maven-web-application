pipeline
{
    agent any

    tools
    {
        maven 'Maven_3.9.7'
    }

    environment
    {
        buildNumber = "${BUILD_NUMBER}"
    }

     stages
     {
        stage('Checkout code to Jenkins from GitHub')
        {
            steps()
            {
                git branch: 'master', url: 'https://github.com/itspranavdubey/maven-web-application.git'
            }
        }
        stage('Build Artifact Using Maven')
        {
            steps()
            {
            sh 'mvn clean package'
            }
        }
        stage("Build Docker Image")
        {
            steps()
            {
                sh 'docker build -t itspranavdubey/logindockerjenkins:${buildNumber} .'
            }
        }
        stage("Authenticate and Push Docker Image To Docker Hub")
        {
            steps()
            {
                withCredentials([string(credentialsId: 'Dockerhubpassword', variable: 'Dockerhubpassword')])
                {
                    sh 'docker login -u itspranavdubey -p ${Dockerhubpassword}'
                }
                sh 'docker push itspranavdubey/logindockerjenkins:${buildNumber}'
            }
        }
        stage('Remove Docker Images From Jenkins Locally')
        {
            steps()
            {
                sh 'docker rmi -f itspranavdubey/logindockerjenkins:${buildNumber}'
            }
        }
        stage('Deploy App to Deployement Server')
        {
            steps()
            {
                sshagent(['DeploymentServer_SSH']) 
                {
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@13.233.206.123 docker rm -f mavenwebapplication || true"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@13.233.206.123 docker run -d --name mavenwebapplication -p 8080:8080 itspranavdubey/logindockerjenkins:$Build_Number"
                }
            }
        }
     } 
}